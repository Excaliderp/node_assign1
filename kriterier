Kunskapskontroll

I denna uppgift kommer ni att skapa och dokumentera ett CRUD API för Bondfilmer med hjälp av Express.js. Målet är att utveckla en applikation som kan hantera Bondfilmer, inklusive att lägga till, uppdatera, hämta och ta bort filmer. Ni kommer att implementera samt säkra API:et med en API-nyckel.

För att uppnå väl godkänt krävs att ni separerar routes i olika filer, lägger till validering av inkommande data för POST och PUT-endpoints och anpassar API-nyckel middleware för att stödja flera giltiga API-nycklar. Ni kommer även att utveckla endpoints för att utfärda och återkalla API-nycklar.

Som en del av uppgiften ska ni dokumentera API:et genom att skapa en README-fil som beskriver alla endpoints, deras syfte och hur man använder dem. README-filen ska också innehålla exempel på hur man testar API:et med Postman, hur man skickar förfrågningar till API:et och förväntade svar, samt en förklaring av hur man lägger till API-nyckel.

Godkänt

1. Implementera följande rutter för att hantera bond filmer:

● X GET /movies: Hämta en lista med alla Bondfilmer.

● X GET /movies/:id: Hämta en specifik Bondfilm baserat på dess ID.

● X POST /movies: Lägg till en ny Bondfilm.

● X PUT /movies/:id: Uppdatera en befintlig Bondfilm baserat på dess ID.

● X DELETE /movies/:id: Ta bort en Bondfilm baserat på dess ID.

● X Hantera felaktiga förfrågningar med lämpliga statuskoder och felmeddelanden.

2. X Testa alla API endpoints med Postman och säkerställ att de fungerar korrekt.

3. X Implementera en enkel middleware för att säkra API:et med en API-nyckel.

4. Dokumentera API:et med en README-fil som beskriver alla endpoints, deras syfte och hur man använder dem. Inkludera information om vilka parametrar och det body-innehåll som ska inkluderas i de förfrågningar som kräver det.

● Inkludera exempel på hur man testar API:et med Postman.

● Visa hur man skickar förfrågningar till API:et och förväntade svar.

● Förklara hur man lägger till API-nyckel.

Väl godkänt

För att uppnå väl godkänt, utöver kraven för godkänt, ska ni även:

1. Lägg till validering av inkommande data för POST och PUT-endpoints.

● Kontrollera att alla obligatoriska fält är ifyllda*.

● Validera att fältvärden är korrekta (t.ex. att åral är numeriska)**

2. Anpassa API-nyckel middleware för att stödja flera giltiga API-nycklar och utveckla endpoints för att utfärda och återkalla API-nycklar.

● Skapa en lista med giltiga API-nycklar och kontrollera om den skickade API-nyckeln finns i listan.

● Implementera ytterligare API-endpoints för att lägga till och ta bort API-nycklar från listan över giltiga nycklar.

3. Separera routes i en mapp kallad “routes” som innehåller olika filer för att underlätta läsbarhet.

4. Utöver de krav på dokumentationen i README filen, inkludera information om hur man tar bort och lägger till en API nyckel.

* Obligatoriska fält: Title, Year, Released, Genre. ** Krav på validering. Se till att Year är ett årtal.